{"ast":null,"code":"import _defineProperty from \"/Users/zeus/Documents/Projects/react-playground/e-commerce-clothing/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport CartActionTypes from './cart.types';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (currentState = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, currentState, {\n        hidden: !currentState.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, currentState, {\n        cartItems: addItemToCart(currentState.cartItems, action.payload)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, currentState, {\n        cartItems: removeItemFromCart(currentState.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, currentState, {\n        cartItems: currentState.cartItems.filter(cartITem => cartITem.id !== action.payload.id)\n      });\n\n    case CartActionTypes.CLEAR_CART:\n      return _objectSpread({}, currentState, {\n        cartItems: []\n      });\n\n    default:\n      return currentState;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/zeus/Documents/Projects/react-playground/e-commerce-clothing/client/src/redux/cart/cart.reducers.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","currentState","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartITem","id","CLEAR_CART"],"mappings":";;;;;;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAAEC,YAAY,GAAGJ,aAAjB,EAAgCK,MAAhC,KAA4C;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,eAAe,CAACU,kBAArB;AACI,+BACOH,YADP;AAEIH,QAAAA,MAAM,EAAE,CAACG,YAAY,CAACH;AAF1B;;AAIJ,SAAKJ,eAAe,CAACW,QAArB;AACI,+BACOJ,YADP;AAEIF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,YAAY,CAACF,SAAd,EAAyBG,MAAM,CAACI,OAAhC;AAF5B;;AAIJ,SAAKZ,eAAe,CAACa,WAArB;AACI,+BACON,YADP;AAEIF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,YAAY,CAACF,SAAd,EAAyBG,MAAM,CAACI,OAAhC;AAFjC;;AAIJ,SAAKZ,eAAe,CAACc,oBAArB;AACI,+BACOP,YADP;AAEIF,QAAAA,SAAS,EAAEE,YAAY,CAACF,SAAb,CAAuBU,MAAvB,CAAiCC,QAAF,IAAgBA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACI,OAAP,CAAeK,EAA9E;AAFf;;AAIJ,SAAKjB,eAAe,CAACkB,UAArB;AACI,+BACOX,YADP;AAEIF,QAAAA,SAAS,EAAE;AAFf;;AAIJ;AACI,aAAOE,YAAP;AA3BR;AA6BH,CA9BD;;AAgCA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\n\nconst INITIAL_STATE = {\n    hidden: true,\n    cartItems: []\n};\n\nconst cartReducer = ( currentState = INITIAL_STATE, action ) => {\n    switch (action.type) {\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\n            return {\n                ...currentState,\n                hidden: !currentState.hidden\n            };\n        case CartActionTypes.ADD_ITEM:\n            return {\n                ...currentState,\n                cartItems: addItemToCart(currentState.cartItems, action.payload)\n            };\n        case CartActionTypes.REMOVE_ITEM:\n            return {\n                ...currentState,\n                cartItems: removeItemFromCart(currentState.cartItems, action.payload)\n            };\n        case CartActionTypes.CLEAR_ITEM_FROM_CART:\n            return {\n                ...currentState,\n                cartItems: currentState.cartItems.filter( ( cartITem ) => cartITem.id !== action.payload.id )\n            };\n        case CartActionTypes.CLEAR_CART:\n            return {\n                ...currentState,\n                cartItems: []\n            };\n        default:\n            return currentState;\n    }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}